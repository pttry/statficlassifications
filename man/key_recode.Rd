% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recode_with_key.R
\name{key_recode}
\alias{key_recode}
\title{Recode classifications using key}
\usage{
key_recode(
  x,
  key,
  from = NULL,
  to = NULL,
  x_name = deparse(substitute(x)),
  by = "names",
  add = FALSE
)
}
\arguments{
\item{x}{vector of elements to be recoded}

\item{key}{the key to use in recoding}

\item{from}{source column in key for recoding}

\item{to}{target column in key for recoding}

\item{x_name}{name of the vector (variable) to be recoded}

\item{by}{\code{names}, \code{values} or \code{all_values}. Option
\code{names} uses column names to join key to input. Option
\code{values} looks for the most suitable from-column in the key
by comparing the values in columns. The from-column is chosen as
the one that has most of the values of the input vector. Option
\code{all_values} requires that all values are in the from-column.}

\item{add}{whether to add (or replace) the original vector to be recoded.
Defaults to \code{FALSE}}
}
\value{
vector or data.frame
}
\description{
Given a key, recodes input. In most of the cases is able to recode an input
given just a key. That is, the arguments are are the object to be recoded and
a key.
}
\details{
Keys can be data.frames, named vectors or lists of named vectors.

ISSUES: works now by finding for each column a suitable variable in key. But
sometimes we need to find the suitable column in the data.frame.
}
\examples{

  v <- c("a", "b", "a", "c", "b", "b")

  key_data.frame <- data.frame(var1 = letters[1:4],
                               var2 = c("first letter",
                                        "second letter",
                                        "third letter",
                                        "fourth letter"))

  key_recode(v, key_data.frame, by = "values")
  key_recode(key_recode(v, key_data.frame), key_data.frame)

  key_named_vector <- c("a" = "first letter",
                        "b" = "second letter",
                        "c" = "third letter",
                        "d" = "fourth letter")

  key_recode(v, key_named_vector)
  key_recode(key_recode(v, key_named_vector), key_named_vector)

  f <- factor(c("a", "b", "a", "c", "b", "b"))

  key_data.frame <- data.frame(var1 = letters[1:4],
                               var2 = c("first letter",
                                        "second letter",
                                        "third letter",
                                        "fourth letter"))

  key_recode(f, key_data.frame, by = "values")
  key_recode(key_recode(f, key_data.frame), key_data.frame)

  key_named_vector <- c("a" = "first letter",
                        "b" = "second letter",
                        "c" = "third letter",
                        "d" = "fourth letter")

  key_recode(f, key_named_vector, by = "values")
  key_recode(key_recode(f, key_named_vector), key_named_vector)


  df <- data.frame(var1 = v,
                   y = rnorm(6))
  key_recode(df, key_data.frame, by = "values")
  key_recode(key_recode(df, key_data.frame), key_data.frame)
  key_recode(df, key_named_vector)
  key_recode(key_recode(df, key_data.frame), key_named_vector)


   x <- data.frame(a = c("a1", "a2"), b = c("b1", "b2"))
   key <- list(a = c("a1" = "first", "a2" = "second"),
               b = c("b1" = "other", "b2" = "something"))
   key_recode(x, key)
   key_recode(key_recode(x, key), key)

   key$c <- key$a
   key$a <- NULL
   key_recode(x, key, by = "values")
   key_recode(x, key, by = "names")

}
