str(g)
search_keys("kunta")
search_keys("occupation")
search_keys("ammatti")
devtools::load_all(".")
rm(list = ls()); gc()
devtools::load_all(".")
check()
test_that("get_regionkey() named non-predefined works", {
expect_named(get_regionkey("kunta", "kuntaryhmitys", only_codes = TRUE, offline = FALSE),
c("kunta_code", "kuntaryhmitys_code"))
})
codes_to_names("KU103")
codes_to_names("SSS")
prefix_to_name("3yt324")
prefix_to_name("3yt324", pass_unknown = TRUE)
prefix_to_name("sdgwe", pass_unknown = TRUE)
x <- "4h24h2"
prefixes <- unique(sapply(unique(x), gsub, pattern = "[^a-zA-Z]", replacement = ""))
prefixes
codes_to_names("giiweg2")
codes_to_names("KU302")
set_region_codes("klsdw")
devtools::load_all(".")
prefix_to_name("jklweg")
devtools::load_all(".")
load("C:/Users/juhoa/git_clones/statficlassifications/data/number_of_regions.rda")
number_of_regions
sample(c(letters, 0:9), 5)
paste0(sample(c(letters, 0:9), 5))
paste(sample(c(letters, 0:9), 5), collapse = "")
id <- sapply(1:10, paste(sample(c(letters, 0:9), 5), collapse = ""))
id <- sapply(1:10, ~paste(sample(c(letters, 0:9), 5), collapse = ""))
id
id <- sapply(1:10, function() {paste(sample(c(letters, 0:9), 5), collapse = "")})
id <- replicate(10, function() {paste(sample(c(letters, 0:9), 5), collapse = "")})
id
args(replicate)
id <- replicate(10, paste(sample(c(letters, 0:9), 5), collapse = ""))
id
as.Date("2010-01-01")
seq(from = as.Date("2010-01-01"), to = as.Date("2012-12-31"), by = 1)
id <- replicate(10, paste(sample(c(letters, 0:9), 5), collapse = ""))
dates <- seq(from = as.Date("2010-01-01"), to = as.Date("2012-12-31"), by = 1)
alkupvm <- sample(dates, 10)
id <- replicate(10, paste(sample(c(letters, 0:9), 5), collapse = ""))
id <- c(id, id[5:10], id[9:10])
id <- replicate(10, paste(sample(c(letters, 0:9), 5), collapse = ""))
id <- c(id, id[5:10], id[9:10])
dates <- seq(from = as.Date("2010-01-01"), to = as.Date("2012-12-31"), by = 1)
alkupvm <- sample(dates, length(id))
loppuvpm <- sample(dates[dates > "2011-01-01"], length(id))
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm)
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm)
loppupvm <- sample(dates[dates > "2011-01-01"], length(id))
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm)
data
id <- replicate(10, paste(sample(c(letters, 0:9), 5), collapse = ""))
id <- c(id, id[5:10], id[9:10])
dates <- seq(from = as.Date("2010-01-01"), to = as.Date("2012-12-31"), by = 1)
alkupvm <- sample(dates, length(id))
loppupvm <- sample(dates[dates > max(alkupvm)], length(id))
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm)
# generate "main" spells
data
id <- replicate(10, paste(sample(c(letters, 0:9), 5), collapse = ""))
id <- c(id, id[5:10], id[9:10])
dates <- seq(from = as.Date("2010-01-01"), to = as.Date("2012-12-31"), by = 1)
alkupvm <- sample(dates[dates < "2011-01-01"], length(id))
loppupvm <- sample(dates[dates > "2011-01-01"], length(id))
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm)
# generate "main" spells
data
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm) %>% arrange(id)
library(tidyverse)
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm) %>% arrange(id)
data
data %>% group_by(id) %>% spread(alkupvm)
args(spread)
data %>% group_by(id) %>% mutate(spell_number = row_number())
data %>% group_by(id) %>% mutate(spell = paste0("spell", row_number()))
data %>% group_by(id) %>% mutate(spell = paste0("spell", row_number())) %>% unite(alkupvm, loppupvm, sep = "/")
args(unite)
data %>% group_by(id) %>% mutate(spell = paste0("spell", row_number())) %>% unite(alkuloppu, alkupvm, loppupvm, sep = "/")
data %>% group_by(id) %>% mutate(spell = paste0("spell", row_number())) %>% unite(alkuloppu, alkupvm, loppupvm, sep = "/") %>% spread(spell, alkuloppu)
spread_spell  <- function(data, spell) {
data %>% separate(spell, c("alkupvm", "loppupvm"))
}
spread_spells <- function(data) {
data %>% group_by(id) %>%
mutate(spell = paste0("spell", row_number())) %>%
unite(alkuloppu, alkupvm, loppupvm, sep = "/") %>%
spread(spell, alkuloppu)
}
data <- spread_spells(data)
data
data <- ungroup(data)
spread_spell  <- function(data, spell) {
data %>% separate(spell, c("alkupvm", "loppupvm"))
}
spread_spell(data, spell1)
spread_spell(data, "spell1")
spread_spell  <- function(data, spell) {
data %>% separate(spell, c("alkupvm", "loppupvm"), sep = "/")
}
spread_spell(data, "spell1")
spread_spell  <- function(data, spell) {
data %>% separate(spell, paste(spell, c("alkupvm", "loppupvm"), sep = "_"), sep = "/")
}
spread_spell(data, "spell1")
data[-1,:]
data[-1,]
data
id <- replicate(10, paste(sample(c(letters, 0:9), 5), collapse = ""))
id <- c(id, id[5:10], id[9:10])
dates <- seq(from = as.Date("2010-01-01"), to = as.Date("2012-12-31"), by = 1)
alkupvm <- sample(dates[dates < "2011-01-01"], length(id))
loppupvm <- sample(dates[dates > "2011-01-01"], length(id))
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm) %>% arrange(id)
head(data)
spread_spells(data)
spread_spells1 <- function(data) {
data %>% group_by(id) %>%
mutate(spell = paste0("spell", row_number())) %>%
unite(alkuloppu, alkupvm, loppupvm, sep = "/") %>%
spread(spell, alkuloppu) %>%
ungroup()
}
data
data[,-1]
spread_spells1(data)[,-1]
sapply(spread_spells1(data)[,-1], spread_spell)
data %>% separate(spell, paste(spell, c("alkupvm", "loppupvm"), sep = "_"), sep = "/")
spread_spell  <- function(spell, data) {
data %>% separate(spell, paste(spell, c("alkupvm", "loppupvm"), sep = "_"), sep = "/")
}
sapply(spread_spells1(data)[,-1], spread_spell, spread_spells1(data)[,-1])
spread_spells1(data)[,-1]
sapply(c("spell1", "spell2", "spell3"), spread_spell, data)
data
sapply(c("spell1", "spell2", "spell3"), spread_spell, spread_spells1(data))
lapply(c("spell1", "spell2", "spell3"), spread_spell, spread_spells1(data))
spread_spell  <- function(data, spell) {
data %>% separate(spell, paste(spell, c("alkupvm", "loppupvm"), sep = "_"), sep = "/")
}
spread_spells1 <- function(data) {
data %>% group_by(id) %>%
mutate(spell = paste0("spell", row_number())) %>%
unite(alkuloppu, alkupvm, loppupvm, sep = "/") %>%
spread(spell, alkuloppu) %>%
ungroup()
}
spread_spell  <- function(data, spell) {
data %>% separate(spell, paste(spell, c("alkupvm", "loppupvm"), sep = "_"), sep = "/")
}
spread_spells2 <- function(data, spells) {
data <- spread_spells1(data)
for(spell in spells) {
data <- spread_spell(data, spell)
}
data
}
head(dadta)
head(data)
spread_spells1(data)
spread_spell2(data)
spread_spells2(data)
spread_spells1(data)
spells <- names(data)[grepl("spell")]
args(grepl)
spells <- names(data)[grepl("spell", names(data))]
spells
grepl("spell", names(data))
spread_spells2 <- function(data) {
data <- spread_spells1(data)
spells <- names(data)[grepl("spell", names(data))]
for(spell in spells) {
data <- spread_spell(data, spell)
}
data
}
spread_spells2(data)
spread_spells2(data) -> data
gather(data, spell, alkuloppu)
gather(data, spell, alkuloppu. -id)
gather(data, spell, alkuloppu, -id)
data %>% gather(spell, time, -id) %>%
separate(spell, c("spell", "time_tieto"), sep = "_")
data %>% gather(spell, time, -id) %>%
separate(spell, c("spell", "time_tieto"), sep = "_") %>%
spread(time_tieto, time)
data %>% gather(spell, time, -id) %>%
separate(spell, c("spell", "time_tieto"), sep = "_") %>%
spread(time_tieto, time) %>%
filter(!is.na(alkupvm))
id <- replicate(10, paste(sample(c(letters, 0:9), 5), collapse = ""))
id <- c(id, id[5:10], id[9:10])
dates <- seq(from = as.Date("2010-01-01"), to = as.Date("2012-12-31"), by = 1)
alkupvm <- sample(dates[dates < "2011-01-01"], length(id))
loppupvm <- sample(dates[dates > "2011-01-01"], length(id))
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm) %>% arrange(id)
head(data)
data <- spread_spells(data)
head(data)
spread_spells1 <- function(data) {
data %>% group_by(id) %>%
mutate(spell = paste0("spell", row_number())) %>%
unite(alkuloppu, alkupvm, loppupvm, sep = "/") %>%
spread(spell, alkuloppu) %>%
ungroup()
}
id <- replicate(10, paste(sample(c(letters, 0:9), 5), collapse = ""))
id <- c(id, id[5:10], id[9:10])
dates <- seq(from = as.Date("2010-01-01"), to = as.Date("2012-12-31"), by = 1)
alkupvm <- sample(dates[dates < "2011-01-01"], length(id))
loppupvm <- sample(dates[dates > "2011-01-01"], length(id))
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm) %>% arrange(id)
head(data)
data <- spread_spells(data)
head(data)
gather_spells(data)
gather_spells <- function(data) {
data %>% gather(spell, time, -id) %>%
separate(spell, c("spell", "time_tieto"), sep = "_") %>%
spread(time_tieto, time) %>%
filter(!is.na(alkupvm))
}
gather_spells(data)
data
data <- ungroup(data)
gather_spells(data)
data
data %>% gather(spell, time, -id) %>%
separate(spell, c("spell", "time_tieto"), sep = "_") %>%
spread(time_tieto, time) %>%
filter(!is.na(alkupvm))
data %>% gather(spell, time, -id) %>%
separate(spell, c("spell", "time_tieto"), sep = "_")
data %>% gather(spell, time, -id)
data
spread_spells <- function(data) {
data <- spread_spells1(data)
spells <- names(data)[grepl("spell", names(data))]
for(spell in spells) {
data <- spread_spell(data, spell)
}
data
}
id <- replicate(10, paste(sample(c(letters, 0:9), 5), collapse = ""))
id <- c(id, id[5:10], id[9:10])
dates <- seq(from = as.Date("2010-01-01"), to = as.Date("2012-12-31"), by = 1)
alkupvm <- sample(dates[dates < "2011-01-01"], length(id))
loppupvm <- sample(dates[dates > "2011-01-01"], length(id))
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm) %>% arrange(id)
spread_spells1 <- function(data) {
data %>% group_by(id) %>%
mutate(spell = paste0("spell", row_number())) %>%
unite(alkuloppu, alkupvm, loppupvm, sep = "/") %>%
spread(spell, alkuloppu) %>%
ungroup()
}
spread_spell  <- function(data, spell) {
data %>% separate(spell, paste(spell, c("alkupvm", "loppupvm"), sep = "_"), sep = "/")
}
spread_spells <- function(data) {
data <- spread_spells1(data)
spells <- names(data)[grepl("spell", names(data))]
for(spell in spells) {
data <- spread_spell(data, spell)
}
data
}
gather_spells <- function(data) {
data %>% gather(spell, time, -id) %>%
separate(spell, c("spell", "time_tieto"), sep = "_") %>%
spread(time_tieto, time) %>%
filter(!is.na(alkupvm))
}
head(data)
data <- spread_spells(data)
data
data <- gather_spells(data)
data
data %>% group_by(shnro) %>%
summarize(spell = paste(alkupvm, loppupvm, sep = "/"))
collapse_spells <- function(data) {
data %>% group_by(id) %>%
summarize(spell = paste(alkupvm, loppupvm, sep = "/"))
}
collapse_spells8data
collapse_spells(data)
data %>% group_by(id) %>%
summarize(spell = paste(paste(alkupvm, loppupvm, sep = "/"), collapse = "&")) %>%
ungroup()
data %>% mutate(spell = strsplit(spell, "&"))
data
data <- collapse_spells(data)
head(data)
data
collapse_spells <- function(data) {
data %>% group_by(id) %>%
summarize(spell = paste(paste(alkupvm, loppupvm, sep = "/"), collapse = "&")) %>%
ungroup()
}
id <- replicate(10, paste(sample(c(letters, 0:9), 5), collapse = ""))
id <- c(id, id[5:10], id[9:10])
dates <- seq(from = as.Date("2010-01-01"), to = as.Date("2012-12-31"), by = 1)
alkupvm <- sample(dates[dates < "2011-01-01"], length(id))
loppupvm <- sample(dates[dates > "2011-01-01"], length(id))
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm) %>% arrange(id)
data
data <- collapse_spells(data)
data
data %>% mutate(spell = strsplit(spell, "&"))
data %>% mutate(spell = strsplit(spell, "&"))%>% purrr::unnest()
data %>% mutate(spell = strsplit(spell, "&"))%>% unnest()
data %>% mutate(spell = strsplit(spell, "&")) %>%
unnest(spell) %>%
separate(spell, c("alkupvm", "loppupvm"), sep "/")
data %>% mutate(spell = strsplit(spell, "&")) %>%
unnest(spell) %>%
separate(spell, c("alkupvm", "loppupvm"), sep = "/")
library(tidyverse)
id <- replicate(10, paste(sample(c(letters, 0:9), 5), collapse = ""))
id <- c(id, id[5:10], id[9:10])
dates <- seq(from = as.Date("2010-01-01"), to = as.Date("2012-12-31"), by = 1)
alkupvm <- sample(dates[dates < "2011-01-01"], length(id))
loppupvm <- sample(dates[dates > "2011-01-01"], length(id))
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm) %>% arrange(id)
spread_spells1 <- function(data) {
data %>% group_by(id) %>%
mutate(spell = paste0("spell", row_number())) %>%
unite(alkuloppu, alkupvm, loppupvm, sep = "/") %>%
spread(spell, alkuloppu) %>%
ungroup()
}
spread_spell  <- function(data, spell) {
data %>% separate(spell, paste(spell, c("alkupvm", "loppupvm"), sep = "_"), sep = "/")
}
spread_spells <- function(data) {
data <- spread_spells1(data)
spells <- names(data)[grepl("spell", names(data))]
for(spell in spells) {
data <- spread_spell(data, spell)
}
data
}
gather_spells <- function(data) {
data %>% gather(spell, time, -id) %>%
separate(spell, c("spell", "time_tieto"), sep = "_") %>%
spread(time_tieto, time) %>%
filter(!is.na(alkupvm))
}
collapse_spells <- function(data) {
data %>% group_by(id) %>%
summarize(spell = paste(paste(alkupvm, loppupvm, sep = "/"), collapse = "&")) %>%
ungroup()
}
uncollapse_spells <- function(data) {
data %>% mutate(spell = strsplit(spell, "&")) %>%
unnest(spell) %>%
separate(spell, c("alkupvm", "loppupvm"), sep = "/")
}
data
spread_spells(data)
collapse_spells(data)
collapse_spells(data) %>% uncollapse_spells()
spread_spells <- function(data) {
data <- spread_spells1(data)
spells <- names(data)[grepl("spell", names(data))]
for(spell in spells) {
data <- separate(data, spell, paste(spell, c("alkupvm", "loppupvm"), sep = "_"), sep = "/")
}
data
}
spread_spells(data)
spread_spells <- function(data) {
data <-   data %>% group_by(id) %>%
mutate(spell = paste0("spell", row_number())) %>%
unite(alkuloppu, alkupvm, loppupvm, sep = "/") %>%
spread(spell, alkuloppu) %>%
ungroup()
spells <- names(data)[grepl("spell", names(data))]
for(spell in spells) {
data <- separate(data, spell, paste(spell, c("alkupvm", "loppupvm"), sep = "_"), sep = "/")
}
data
}
spread_spells(data)
# tidy evaluation is a special way of non-standard evaluation
data
tbl_df(data)
as_tibble(data)
data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm)
data_frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm)
tibble(id = id, alkupvm = alkupvm, loppupvm = loppupvm)
tibble(id = id, alkupvm = alkupvm, loppupvm = loppupvm) -> df
slice(df, 10:15)
sample_n(df, 10)
sample_n
count(df)
count(df, id)
df %>% group_by(id) %>% summarize(first())
df %>% group_by(id) %>% summarize(first(alkupvm))
df %>% group_by(id) %>% summarize(last(alkupvm))
df
df %>% mutate(loppupvm_lag = lag(loppupvm))
args(lag)
df %>% mutate(loppupvm_lag = lag(loppupvm) ,default = 0)
df %>% mutate(loppupvm_lag = lag(loppupvm ,default = 0))
df2 <- tibble(id = 1:10, x = rnorm(10,0,1))
df2
df2 %>% mutate(df2, var = ntile(x, 5)
)
df2 %>% mutate(var = between(0.5,1))
args(between)
df2 %>% mutate(var = between(x, 0.5,1))
df2 %>% mutate(var = cume_dist(x))
# tidy selection and data masking
mtcars
var_summary <- function(data, var) {}
var_summary <- function(data, var) {
data %>% summarize(n = n(), min = min( {{ var }}, max = ( {{ var }} ) )}
data %>% summarize(n = n(), min = min( {{ var }} ), max = ( {{ var }} ) )}
var_summary <- function(data, var) {
data %>% summarize(n = n(), min = min( {{ var }} ), max = ( {{ var }} ) )}
var_summary
df
df2
var_summary(df2, x)
df <- tibble(location = 1:10, x = runif(10, 200,1000))
d
df
df %>% mutate(df, share = x / sum(.data$x))
# data masking and tidy selection
df <- tibble(x = 1:10, y = rnorm(10,0,1), z = cumsum(y))
df
line_plot <- function(df, var) {
ggplot(df, aes(x = x, y = {{var}})) + geom_line()
}
line_plot(df, x)
df
line_plot(df, y)
line_plot(df, z)
selection <- c("x,y")
df %>% select(all_of(selection))
selection <- c("x","y")
df %>% select(all_of(selection))
selection <- c("x", "y", "g")
df %>% select(any_of(selection))
df %>% select(all_of(selection))
df
apply(df, margin = 2, sum)
args(apply)
apply(df, margin = 2, FUN = sum)
apply(df, 2, sum)
apply(df, 1, sum)
apply(df, 1, as.character)
apply(df, 2, as.character)
# use apply for data.frames and matrices
# lapply makes lists from lists
# lapply produces lists, sapply profuces vectors
# apply, lapply, sapply, tapply
id <- replicate(1000000, paste(sample(c(letters, 0:9), 5), collapse = ""))
id <- c(id, id[500000:1000000], id[900000:1000000])
dates <- seq(from = as.Date("2010-01-01"), to = as.Date("2012-12-31"), by = 1)
alkupvm <- sample(dates[dates < "2011-01-01"], length(id))
loppupvm <- sample(dates[dates > "2011-01-01"], length(id))
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm) %>% arrange(id)
alkupvm <- sample(dates[dates < "2011-01-01"], length(id), replace = TRUE)
loppupvm <- sample(dates[dates > "2011-01-01"], length(id), replace = TRUE))
loppupvm <- sample(dates[dates > "2011-01-01"], length(id), replace = TRUE)
data <- data.frame(id = id, alkupvm = alkupvm, loppupvm = loppupvm) %>% arrange(id)
start <- Sys.time()
data %>% collapse_spells()
end <- Sys.time()
end-start
start <- Sys.time()
data %>% lazy_dt() %>% collapse_spells() %>% as_tibble()
end <- Sys.time()
end-start
library(dtplyr)
install.packages("dtplyr")
install.packages("dtplyr")
install.packages("dtplyr")
install.packages("dtplyr")
start <- Sys.time()
data %>% collapse_spells()
end <- Sys.time()
end-start
start <- Sys.time()
data %>% lazy_dt() %>% collapse_spells() %>% as_tibble()
end <- Sys.time()
end-start
library(tidyverse)
library(dtplyr)
lazy_dt
install.packages("dplyr")
install.packages("dplyr")
library(tidyverse)
df %>% group_by(id)
library(dplyr)
installed.packages("ellipsis")
install.packages("ellipsis")
install.packages("ellipsis")
install.packages("ellipsis")
library(tidyverse)
library(ellipsis)
library(tidyverse)
.libPaths()
detach(ellipsis)
detach("ellipsis")
