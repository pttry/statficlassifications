results <- dplyr::filter(results, year == year)
}
if(dim(results)[1] == 0) {
return("No search results!")
}
# Format output
output <- character(dim(results)[1])
if(as_localId) {
for(i in 1:dim(results)[1]) {
output[i] <- paste0(results$series[i], results$nro[i], results$year[i], results$date[i])
}
} else {
for(i in 1:dim(results)[1]) {
output[i] <- paste(results$series[i], results$year[i])
}
}
output
}
search_series("ammatti")
search_series("ammatti", as_localId = TRUE)
"2020" == 2020
search_series("ammatti", year = 2021, as_localId = TRUE)
searchterms <- "ammatti"
year = 2021
results <- urls_as_localId_df(get_url(classification_service = "classifications"))
searchterms <- unlist(list(...))
results <- dplyr::filter(results, series %in% searchterms)
results
!is.null(year)
results <- dplyr::filter(results, year == year)
results
filter(resuts, year == 2021)
filter(results, year == 2021)
filter(results, year == year)
yaer
year
year == 2001
vuosi <- 2021
filter(results, year == vuosi)
#' @param as_localId logical, whether returns the localID of the found table. Defaults to FALSE.
#'
#' @return
#' @export
#'
#' @examples
#'
#'   search_series("ammatti")
#'   search_series("ammatti", year = 2021, as_localId = TRUE)
#'
search_series <- function(...,
year = NULL,
as_localId = FALSE){
results <- urls_as_localId_df(get_url(classification_service = "classifications"))
search_year <- year
# Filter results by the searchterms
searchterms <- unlist(list(...))
results <- dplyr::filter(results, series %in% searchterms)
if(!is.null(year)) {
results <- dplyr::filter(results, year == year)
}
if(dim(results)[1] == 0) {
return("No search results!")
}
# Format output
output <- character(dim(results)[1])
if(as_localId) {
for(i in 1:dim(results)[1]) {
output[i] <- paste0(results$series[i], results$nro[i], results$year[i], results$date[i])
}
} else {
for(i in 1:dim(results)[1]) {
output[i] <- paste(results$series[i], results$year[i])
}
}
output
}
search_series("ammatti", year = 2021, as_localId = TRUE)
#' @param as_localId logical, whether returns the localID of the found table. Defaults to FALSE.
#'
#' @return
#' @export
#'
#' @examples
#'
#'   search_series("ammatti")
#'   search_series("ammatti", year = 2021, as_localId = TRUE)
#'
search_series <- function(...,
year = NULL,
as_localId = FALSE){
results <- urls_as_localId_df(get_url(classification_service = "classifications"))
search_year <- year
# Filter results by the searchterms
searchterms <- unlist(list(...))
results <- dplyr::filter(results, series %in% searchterms)
if(!is.null(year)) {
results <- dplyr::filter(results, year == search_year)
}
if(dim(results)[1] == 0) {
return("No search results!")
}
# Format output
output <- character(dim(results)[1])
if(as_localId) {
for(i in 1:dim(results)[1]) {
output[i] <- paste0(results$series[i], results$nro[i], results$year[i], results$date[i])
}
} else {
for(i in 1:dim(results)[1]) {
output[i] <- paste(results$series[i], results$year[i])
}
}
output
}
search_series("ammatti", year = 2021, as_localId = TRUE)
rm(list = ls())
load_all()
search_series("ammatti", year = 2021, as_localId = TRUE) -> localId
localId
ammatit <- get_series(localId)
head(ammatit)
search_series()
load_all()
search_series()
search_series(as_localId = TRUE)
c("classifications", "correspondenceTables")[c(localId %in% search_series(), localId %in% search_keys())]
localId
localId %in% search_series()
all_series -< search_series()
all_series <- search_series()
localId %in% all_series
all_series
c("classifications", "correspondenceTables")[c(localId %in% search_series(as_localId = TRUE), localId %in% search_keys(as_localId = TRUE))]
indicator <- c(localId %in% search_series(as_localId = TRUE),
localId %in% search_keys(as_localId = TRUE))
c("classifications", "correspondenceTables")[indicator]
localId <- create_localId_name("kunta", "maakunta", year = 2018)
indicator <- c(localId %in% search_series(as_localId = TRUE),
localId %in% search_keys(as_localId = TRUE))
c("classifications", "correspondenceTables")[indicator]
find_service(search_series()[1])
search_series()[1]
find_service(search_series(as_localId = TRUE)[1])
search_series(as_localId = TRUE)[1]
load_all()
find_service(search_series(as_localId = TRUE)[1])
find_service(search_keys(as_localId = TRUE)[1])
load_all()
localId <- "siviiliasiat_1_20140101"
get_series(localId)
endpoint_name <- c("/classificationItems" = "classifications",
"/maps" = "correspondenceTables")
endpoint_name
endpoint_name <- c("classifications" = "/classificationItems",
"correspondenceTables" = "/maps")
endpoint_name
localId
classification_service <- find_classification_service(localId)
url2 <- paste0("https://data.stat.fi/api/classifications/v2/",
classification_service,
localId,
ifelse(content == "data", endpoint_name[classification_service], ""))
content = "data"
url2 <- paste0("https://data.stat.fi/api/classifications/v2/",
classification_service,
localId,
ifelse(content == "data", endpoint_name[classification_service], ""))
url2
if(classification_service == "classifications") {
url <- paste0("https://data.stat.fi/api/classifications/v2/classifications",
localId,
ifelse(content == "data", "/classificationItems", ""))
} else if(classification_service == "correspondenceTables") {
url <- paste0("https://data.stat.fi/api/classifications/v2/correspondenceTables",
localId,
ifelse(content == "data", "/maps", ""))
} else {
stop("Classification services 'classifications' and 'correspondenceTables' currently supported.")
}
identical(url, url2)
localId <- search_keys(as_localId = TRUE)[23]
local_id
localId
classification_service <- find_classification_service(localId)
url2 <- paste0("https://data.stat.fi/api/classifications/v2/",
classification_service,
localId,
ifelse(content == "data", endpoint_name[classification_service], ""))
if(classification_service == "classifications") {
url <- paste0("https://data.stat.fi/api/classifications/v2/classifications",
localId,
ifelse(content == "data", "/classificationItems", ""))
} else if(classification_service == "correspondenceTables") {
url <- paste0("https://data.stat.fi/api/classifications/v2/correspondenceTables",
localId,
ifelse(content == "data", "/maps", ""))
} else {
stop("Classification services 'classifications' and 'correspondenceTables' currently supported.")
}
identical(url2, url)
indicator <- c(T,F)
!any(indicator)
all(!indicator)
indicator <- c(F,F)
all(!indicator)
load_all()
localId
access_API(classification_service = "jdkjskdf")
access_API()
load_all()
load_all()
access_API()
load_all()
urls <- get_url()
load_all()
urls <- get_url()
urls <- get_url(localId)
urls
document()
load_all()
install()
year = 2021
localId <- search_series("ammatti", year = year, as_localId = TRUE)
series <- get_series(localId, print_series_name = FALSE)
head(series)
year = 2018
localId <- search_series("ammatti", year = year, as_localId = TRUE)
series <- get_series(localId, print_series_name = FALSE)
head(series)
unique(series$code)
search_series("ammatti")
year = 2010
localId <- search_series("ammatti", year = year, as_localId = TRUE)
series <- get_series(localId, print_series_name = FALSE)
head(series)
code_level = 1
dplyr::filter(series, nchar(code) == code_level)
load_all()
get_occupationkey(1)
get_occupationkey(2)
install()
document()
install()
get_regionkey("maakunta", "maakunta")
document()
load_all()
get_regionkey("maakunta", "maakunta")
get_regionkey("seutukunta", "seutukunta") -> key
key
"Sisä-Savo" %in% key$alue_name
head(key)
"Sisä-Savo" %in% key$seutukunta_name
key <- c("koko suomi" = "SSS",
"uudenmaan maakunta" = "MK01",
"itä-uudenmaan maakunta" = "MK20",
"varsinais-suomen maakunta" = "MK02",
"satakunnan maakunta" = "MK04",
"kanta-hämeen maakunta" = "MK05",
"pirkanmaan maakunta" = "MK06",
"päijät-hämeen maakunta" = "MK07",
"kymenlaakson maakunta" = "MK08",
"etelä-karjalan maakunta" = "MK09",
"etelä-savon maakunta" = "MK10",
"pohjoissavon maakunta" = "MK11",
"pohjois-karjalan maakunta" = "MK12",
"keski-suomen maakunta" = "MK13",
"etelä-pohjanmaan maakunta" = "MK14",
"pohjanmaan maakunta" = "MK15",
"keski-pohjanmaan maakunta" = "MK16",
"pohjois-pohjanmaan maakunta" = "MK17",
"kainuun maakunta" = "MK18",
"lapin maakunta" = "MK19",
"ahvenanmaa - åland" = "MK21")
key <- data.frame(alue_name = names(key), alue_code = key)
head(key)
rownames(key) <- NULL
head(key)
# Create the nonstandard region names key
key <- c("koko suomi" = "SSS",
"uudenmaan maakunta" = "MK01",
"itä-uudenmaan maakunta" = "MK20",
"varsinais-suomen maakunta" = "MK02",
"satakunnan maakunta" = "MK04",
"kanta-hämeen maakunta" = "MK05",
"pirkanmaan maakunta" = "MK06",
"päijät-hämeen maakunta" = "MK07",
"kymenlaakson maakunta" = "MK08",
"etelä-karjalan maakunta" = "MK09",
"etelä-savon maakunta" = "MK10",
"pohjoissavon maakunta" = "MK11",
"pohjois-karjalan maakunta" = "MK12",
"keski-suomen maakunta" = "MK13",
"etelä-pohjanmaan maakunta" = "MK14",
"pohjanmaan maakunta" = "MK15",
"keski-pohjanmaan maakunta" = "MK16",
"pohjois-pohjanmaan maakunta" = "MK17",
"kainuun maakunta" = "MK18",
"lapin maakunta" = "MK19",
"ahvenanmaa - åland" = "MK21")
nonstandard_region_names_key <- data.frame(alue_name = names(key), alue_code = key)
rownames(nonstandard_region_names_key) <- NULL
usethis:use_data(nonstandard_region_names_key, internal = FALSE, overwrite = TRUE)
usethis::use_data(nonstandard_region_names_key, internal = FALSE, overwrite = TRUE)
document()
install()
document()
load_all()
help("access_API")
document()
load_all()
help("access_API")
document()
load_all()
install()
load_all()
search_classifications("ammatti", year = 2010, as_localId = TRUE) -> localId
localId
classif <- get_classification(localId, as_named_vector = TRUE)
classif <- access_API(localId, content = "data", classification_service = "classifications")
classif
text <- unlist(unique(classif$classification$classificationName))["name"]
text
output <- data.frame(code = classif$code,
name = unlist(lapply(classif$classificationItemNames, '[', "name")))
head(output)
load_all()
classif <- get_classification(localId, as_named_vector = TRUE)
head(classif)
head(get_region_code_name_key("maakunta"))
head(get_region_code_name_key(c("maakunta", "seutukunta"))
)
load_all()
key <- get_region_code_name_key("maakunta", as_named_vector = TRUE)
head(key)
load_all()
key <- get_region_code_name_key("maakunta", as_named_vector = TRUE)
head(key)
region <- c("maakunta", "seutukunta")
key <- get_regionkey(source = region, targets = region, year = year, offline = offline)
offline = TRUE
year = NULL
key <- get_regionkey(source = region, targets = region, year = year, offline = offline)
head(key)
paste0(region, "_name")
output <- as.vector(key[[paste0(region, "_name")]])
output <- as.vector(key[paste0(region, "_name"),])
output
head(key)
output <- as.vector(unlist(key[paste0(region, "_name")],))
outpout
output
region <- "maakunta"
output <- as.vector(unlist(key[paste0(region, "_name")],))
output
key <- get_regionkey(source = region, targets = region, year = year, offline = offline)
output <- as.vector(unlist(key[paste0(region, "_name")],))
outpouot
output
load_all()
key <- get_region_code_name_key(c("maakunta", "seutukunta"))
head(key)
key <- get_region_code_name_key(c("maakunta", "seutukunta"), as_named_vector = TRUE)
head(key)
tail(key)
load_all()
key <- get_region_code_name_key("maakunta")
head(key)
key <- get_region_code_name_key("maakunta", "seutukunta")
head(key)
key <- get_region_code_name_key(c("maakunta", "seutukunta"))
head(key)
document()
load_all()
install()
load_all()
key <- get_occupationkey(1, as_named_vector = TRUE
)
head(key)
key <- get_occupationkey(1)
head(key)
key <- get_occupationkey(2, as_named_vector = TRUE)
head(key)
document()
search_classifications()
localId <- search_classifications(as_localId = TRUE)[216]
localId
key <- get_classification(localId)
head8key)
head(key)
key <- get_classification(localId, as_named_vector = TRUE)
head(key)
devtools::install()
statficlassifications::get_occupationkey(1)
library(statficlassifications)
search_classifications()[1:10]
search_classifications(as_localId = TRUE)[3] -> id
id
key <- get_classification(id)
key
head(key)
search_classifications()[1:10]
search_classifications(as_localId = TRUE)[5] -> id
key <- get_classification(id)
head(key)
library(devtools)
load_all()
prefix_to_name("SK")
name_to_prefix("seutukunta")
name_to_prefix("Seutukunta")
load_all()
name_to_prefix("Seutukunta")
prefix_to_name("sk")
document()
prefix_to_name(c("SK", "MK"))
name_to_prefix(c("maakunta", "seutukunta"))
name <- c("maakunta", "seutukunta")
prefix_name_key$name == name
prefix_name_key
prefix_name_key$name
prefix <- c("SK", "MK")
prefix_name_key$prefix == prefix
prefix_name_key$prefix
prefix_name_key$name == name
name
prefix
prefix_name_key$prefix == prefix
prefix_name_key$prefix %in% prefix
prefix_name_key$name %in% name
load_all()
name
name_to_prefix(name)
name_to_prefix("SK")
load_all()
name_to_prefix("seutukunta")
name_to_prefix("seutukuntaa")
name_to_prefix(c("maakunta", "seutukuntaa"))
name_to_prefix(c("maakuntat", "seutukunta"))
load_all()
prefix_to_name("KA")
prefix_to_name(c("MK", "KA"))
prefix_to_name("maakunta")
key <- c("SSS" = "KOKO MAA",
"KU" = "kunta",
"SK" = "seutukunta",
"MK" = "maakunta")
prefix_name_key<- data.frame(prefix = names(key), name = key)
prefix_name_key
prefix_name_key2 <- data.frame(prefix = c("SSS", "KU", "SK", "MK", "ELY", "SA"),
name = c("KOKO MAA", "kunta", "seutukunta", "maakunta", "ely", "suuralue"))
key <- c("SSS" = "KOKO MAA",
"KU" = "kunta",
"SK" = "seutukunta",
"MK" = "maakunta",
"ELY" = "ely",
"SA" = "suuralue")
prefix_name_key<- data.frame(prefix = names(key), name = key)
rownames(prefix_name_key) <- NULL
identical(prefix_name_key, prefix_name_key2)
prefix_to_name <- function(prefix) {
dplyr::left_join(data.frame(prefix = prefix, prefix_name_key, by = "prefix"))$name
}
prefix_to_name("SK")
prefix_to_name <- function(prefix) {
dplyr::left_join(data.frame(prefix = prefix), prefix_name_key, by = "prefix")$name
}
prefix_to_name("SK")
prefix_to_name("seutukunta")
name_to_prefix("sk")
c(1,2,3,4)[c(F,T,T,F)] <- c(5,6)
c(1,2,3,4)[c(F,T,T,F)]
load_all()
rm(list = ls())
load_all()
prefix_to_name("sk")
name_to_prefix("sk")
name_to_prefix("seutukunta")
name <- "sk"
load_all()
name_to_prefix("sk")
load_all()
name_to_prefix("sk")
name_to_prefix("maakunta")
name_to_prefix("MK")
name_to_prefix("mk")
name_to_prefix(c("MK", "SK"))
load_all()
prefix_to_name("seutukunta")
name_to_prefix("sk")
name_to_prefix("SK")
document()
install()
name_to_prefix("KOKO MAA
")
load_all()
install()
load_all()
name_to_prefix("KOKO MAA
")
name <- "KOKO MAA
"
name <- ifelse(name != "KOKO MAA", tolower(name), name)
name
name != "KOKO MAA"
name <- "KOKO MAA"
name <- ifelse(name != "KOKO MAA", tolower(name), name)
name
load_all()
name_to_prefix(c("maakunta", "seutukunta", "KOKO MAA"))
install()
name_to_prefix("KOKO MAA")
x <- c("maakunta", "KOKO MAA")
name_to_prefix(x)
